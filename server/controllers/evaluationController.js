const mongoose = require("mongoose");
const EvaluateModel = require("../models/evaluateModel");

const getEvaluationController = async (req, res) => {
    try {
        console.log("üì• Received Request:", req.body);

        const { user_id, date } = req.body;
        if (!user_id || !date) {
            return res.status(400).send({ success: false, message: "Missing fields" });
        }

        // ‡πÅ‡∏õ‡∏•‡∏á `date` ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô ISO Format ‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢ (UTC+7)
        const startDate = new Date(date);
        startDate.setHours(0 + 7, 0, 0, 0);  // ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 00:00:00 UTC+7
        const endDate = new Date(date);
        endDate.setHours(23 + 7, 59, 59, 999); // ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 23:59:59 UTC+7

        console.log("üìÖ Checking range:", {
            start: startDate.toISOString(),
            end: endDate.toISOString(),
        });

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤ `user_id` ‡πÄ‡∏õ‡πá‡∏ô `ObjectId` ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const userIdQuery = mongoose.Types.ObjectId.isValid(user_id) ? new mongoose.Types.ObjectId(user_id) : user_id;

        // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö `user_id` ‡πÅ‡∏•‡∏∞ `created_at` ‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô
        const evaluations = await EvaluateModel.find({
            userId: userIdQuery,
            created_at: { $gte: startDate, $lt: endDate },
        });

        if (!evaluations.length) {
            return res.status(404).send({ success: false, message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢" });
        }

        res.status(200).send(evaluations); // ‚úÖ ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô array
    } catch (error) {
        console.error("üö® Error fetching evaluations:", error);
        res.status(500).send({ success: false, message: "Server error", error });
    }
};

module.exports = { getEvaluationController };
